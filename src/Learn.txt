import React, { useState, useEffect } from "react";

const Typewriter = () => {
  
  const words = ["Hello, World!", "Welcome to my website!", "This is a typewriter effect."];
  const [currentWordIndex, setCurrentWordIndex] = useState(0);
  const [currentText, setCurrentText] = useState("");
  const [isDeleting, setIsDeleting] = useState(false);
  const [letterIndex, setLetterIndex] = useState(0);

  useEffect(() => {
    const handleType = () => {
      const currentWord = words[currentWordIndex];
      
      if (isDeleting) {
        setCurrentText(currentWord.substring(0, letterIndex - 1));
        setLetterIndex(letterIndex - 1);
        if (letterIndex === 0) {
          setIsDeleting(false);
          setCurrentWordIndex((prevIndex) => (prevIndex + 1) % words.length);
        }
      } else {
        setCurrentText(currentWord.substring(0, letterIndex + 1));
        setLetterIndex(letterIndex + 1);
        if (letterIndex === currentWord.length) {
          setIsDeleting(true);
        }
      }
    };

    const typingDelay = isDeleting ? 50 : 100; // Adjust typing speed
    const timeoutId = setTimeout(handleType, typingDelay);

    return () => clearTimeout(timeoutId); // Clean up the timeout
  }, [currentWordIndex, letterIndex, isDeleting, words]);

  return (
    <div className="w-full h-screen flex justify-center items-center bg-gray-100">
      <h1 className="text-4xl font-bold text-blue-500">{currentText}</h1>
    </div>
  );
};

export default Typewriter;


























const scroll = useRef()

const Scrolling = () =>{
  scroll.current.s
}


            <NavLink className={({ isActive }) => isActive ? "text-customPurple" : ""} to="/home-page">NavLink


            const handleScroll = (ref) => {
  // Calculate the header height
  const headerHeight = document.querySelector('nav').offsetHeight; // Get the height of the header
  const topPosition = ref.current.getBoundingClientRect().top + window.scrollY - headerHeight; // Adjust for header height
  window.scrollTo({ top: topPosition, behavior: 'smooth' }); // Smooth scroll to adjusted position
};